//AREA-FixDetectedAndTraplessTraps.tph
PRINT ~Processing AREA-FixDetectedAndTraplessTraps.tph~
SILENT
// ----------------------------------------------------------------------------
ACTION_FOR_EACH file IN ~AR0153.ARE~ ~AR1116.ARE~ ~AR1211.ARE~ ~AR2619.ARE~ ~AR3341.ARE~ ~AR3336.ARE~ ~AR0512.ARE~ ~AR0514.ARE~ ~AR1001.ARE~ BEGIN
ACTION_IF (FILE_EXISTS_IN_GAME ~%file%~) THEN BEGIN  //one line allows for use with totsc and vanilla files rather than duplicate blocks for each game
COPY_EXISTING_REGEXP ~%file%~ ~override~
//remove trapped status from containers that don't have a trap script
  READ_LONG  0x70 "cont_off"
  READ_SHORT 0x74 "cont_num"
  FOR(y=0;y<%cont_num%;y+=1)BEGIN
   READ_SHORT (%cont_off% + 0x30 + (%y% * 0xc0)) trapped
   READ_SHORT (%cont_off% + 0x32 + (%y% * 0xc0)) detected
   READ_ASCII (%cont_off% + 0x48 + (%y% * 0xc0)) resref
   SET "exists" = 0
   INNER_PATCH_FILE ~%resref%.bcs~ BEGIN
    SET "exists" = 1
   END
   PATCH_IF (%trapped% = 1) AND (%exists% =0) BEGIN
    WRITE_SHORT (%cont_off% + 0x30 + (%y% * 0xc0)) 0
   END
  END
//remove trapped status from doors that don't have a trap script
  READ_LONG  0xa4 "door_num"
  READ_LONG  0xa8 "door_off"
  FOR(y=0;y<%door_num%;y+=1)BEGIN
   READ_SHORT (%door_off% + 0x70 + (%y% * 0xc8)) trapped
   READ_SHORT (%door_off% + 0x72 + (%y% * 0xc8)) detected
   READ_ASCII (%door_off% + 0x80 + (%y% * 0xc8)) resref
   SET "exists" = 0
   INNER_PATCH_FILE ~%resref%.bcs~ BEGIN
    SET "exists" = 1
   END
   PATCH_IF (%trapped% = 1) AND (%exists% =0) BEGIN
    WRITE_SHORT (%door_off% + 0x70 + (%y% * 0xc8)) 0
   END
  END
BUT_ONLY
END
END
// ----------------------------------------------------------------------------
//~Make detected trapped containers undetected~
// ----------------------------------------------------------------------------
ACTION_FOR_EACH file IN ~ar0500~ ~ar0511~ ~ar0512~ ~ar0513~ ~ar0514~ ~ar1501~ ~ar1502~ ~ar1503~ ~ar1504~ ~ar3336~ BEGIN
ACTION_IF (FILE_EXISTS_IN_GAME ~%file%.are~) THEN BEGIN  //one line allows for use with totsc and vanilla files rather than duplicate blocks for each game
COPY_EXISTING_REGEXP ~%file%.are~ ~override~
 PATCH_IF (%SOURCE_SIZE% > 0xd4) BEGIN
  READ_LONG  0x70 "cont_off"
  READ_SHORT 0x74 "cont_num"
  FOR (index = 0; index < cont_num; index += 1) BEGIN
   READ_SHORT ("%cont_off%" + 0x30 + ("%index%" * 0xc0)) "trapped"
   READ_SHORT ("%cont_off%" + 0x32 + ("%index%" * 0xc0)) "detected"
/* fix detected container trap --  */
   PATCH_IF (("%trapped%" = 1) AND ("%detected%" = 1)) BEGIN
    WRITE_SHORT ("%cont_off%" + 0x32 + ("%index%" * 0xc0)) 0
   END
  END
 END
BUT_ONLY_IF_IT_CHANGES
END
END

// ----------------------------------------------------------------------------
//Make containers trapped but with no items trapless
// ----------------------------------------------------------------------------
ACTION_FOR_EACH file IN ~ar0130~ ~ar0161~ ~ar0162~ ~ar0166~ ~ar0305~ ~ar0306~ ~ar1105~ ~ar1310~ ~ar3316~ ~ar4810~ BEGIN
ACTION_IF (FILE_EXISTS_IN_GAME ~%file%.are~) THEN BEGIN
COPY_EXISTING_REGEXP ~%file%.are~ ~override~
  READ_LONG  0x70 "cont_off"
  READ_SHORT 0x74 "cont_num"
  FOR(y=0;y<%cont_num%;y+=1)BEGIN
   READ_SHORT (%cont_off% + 0x30 + (%y% * 0xc0)) trapped
   READ_LONG  (%cont_off% + 0x44 + (%y% * 0xc0)) hasitem
   READ_ASCII (%cont_off% + 0x48 + (%y% * 0xc0)) trapscript
   PATCH_IF (%trapped% = 1) AND (%hasitem% = 0) AND (~%trapscript%~ STRING_CONTAINS_REGEXP ~^act[0-9]+~ = 0) BEGIN
    PATCH_LOG ~%SOURCE_FILE% -- Container index #%y% -- has no items and was flagged as trapped and has guard calling script. flag removed.~
    WRITE_SHORT (%cont_off% + 0x30 + (%y% * 0xc0)) 0
   END
  END
BUT_ONLY
END
END

/container trap points (i.e. guard spawn points)
ACTION_DEFINE_ARRAY arefile BEGIN ar3357 ar3309 ar4805 ar4905 ar0006 ar0007 ar0009 ar0010 ar0011 ar0012 ar0015 ar0016 ar0018 ar0018 ar0020 ar0021 ar0108 ar0116 ar0130 ar0143 ar0155 ar0155 ar0155 ar0156 ar0158 ar0160 ar0166 ar0166 ar0170 ar0303 ar0303 ar0606 ar0608 ar0611 ar0618 ar0707 ar0711 ar0717 ar0810 ar1103 ar1103 ar1103 ar1111 ar1205 ar1207 ar1304 ar1315 ar1006 ar1006  ar4905 END
ACTION_DEFINE_ARRAY oldXoff BEGIN    468    468    404    212    276    276    212    468    212    276    532    312    345    341    232    276    916    700    612    335    316    321    327    276    212    212    717    728    212    212    436    724    404    262    276    468    468    468    724    262    270    267    468    468   1108    276    212    212    340     276 END
ACTION_DEFINE_ARRAY oldYoff BEGIN    564    180    372    244    180    308    308    180    308    308    180    324    271    277    242    308    884    476   1134    390    327    341    320    308    308    308    311    313    308    372    276    372    340    371    308    180    180    180    372    269    268    270    500    180    308    180    308    308    308     244 END
ACTION_DEFINE_ARRAY newXoff BEGIN    341    410    134    275    503    405    512    424    512    424    276    492    407    332    492    405    960    831    320    633    487    487    487    369    501    276    497    497    276    504    504    538    418    332    373    433    406    397    570    497    497    497    766    439    465    493    511    426    426     275 END
ACTION_DEFINE_ARRAY newYoff BEGIN    614    361    337    329    463    252    194    351    194    322    200    478    407    332    478    252    785   1058   1284    480    454    454    454    241    180    200    166    166    200    189    189    563    177    489    241    356    337    331    444    462    462    462    485    358   1117    469    190    320    320     317 END
OUTER_SET num_array = 50
OUTER_FOR (idx = 0; idx < %num_array%; idx += 1) BEGIN
 OUTER_SPRINT file $arefile("%idx%")
 OUTER_SET OXoff = $oldXoff("%idx%")
 OUTER_SET OYoff = $oldYoff("%idx%")
 ACTION_IF (IS_AN_INT $newXoff("%idx%") ) BEGIN
  OUTER_SET NXoff = $newXoff("%idx%")
 END ELSE BEGIN
  OUTER_SET NXoff = %OXoff%
 END
 ACTION_IF (IS_AN_INT $newYoff("%idx%") ) BEGIN
  OUTER_SET NYoff = $newYoff("%idx%")
 END ELSE BEGIN
  OUTER_SET NYoff = %OYoff%
 END
 ACTION_IF (FILE_EXISTS_IN_GAME ~%file%.are~) THEN BEGIN
  COPY_EXISTING ~%file%.are~ override
   READ_LONG 0x70 con_off
   READ_SHORT 0x74 con_cnt
   FOR (i = 0; i < con_cnt; i += 1) BEGIN
    READ_SHORT (i * 0xc0 + con_off + 0x34) xoff
    READ_SHORT (i * 0xc0 + con_off + 0x36) yoff
    PATCH_IF (xoff = %OXoff%) AND (yoff = %OYoff%) BEGIN //container trap point
     PATCH_IF (VARIABLE_IS_SET %NXoff%) AND (IS_AN_INT %NXoff%) BEGIN
      PATCH_LOG ~%file%.are -- replaced old X offset: %xoff% with new X offset: %NXoff%~
      WRITE_SHORT (i * 0xc0 + con_off + 0x34) %NXoff%
     END
     PATCH_IF (VARIABLE_IS_SET %NYoff%) AND (IS_AN_INT %NYoff%) BEGIN
      PATCH_LOG ~%file%.are -- replaced old Y offset: %yoff% with new Y offset: %NYoff%~
      WRITE_SHORT (i * 0xc0 + con_off + 0x36) %NYoff%
     END
    END
   END
  BUT_ONLY
 END
END

//turn traps on that were off
ACTION_FOR_EACH file IN ~ar0121~ ~ar0153~ ~ar0504~ ~ar4905~ BEGIN
ACTION_IF (FILE_EXISTS_IN_GAME ~%file%.are~) THEN BEGIN
 COPY_EXISTING ~%file%.are~ ~override~
  READ_LONG  0x70 "cont_off"
  READ_SHORT 0x74 "cont_num"
  FOR(y=0;y<%cont_num%;y+=1)BEGIN
   READ_LONG  (%cont_off% + 0x44 + (%y% * 0xc0)) hasitem
   READ_SHORT (%cont_off% + 0x30 + (%y% * 0xc0)) trapped
   READ_ASCII (%cont_off% + 0x48 + (%y% * 0xc0)) trapscript
   PATCH_IF (FILE_EXISTS_IN_GAME ~%trapscript%.bcs~) AND (%trapped% = 0) AND (%hasitem% >0) BEGIN
    WRITE_SHORT (%cont_off% + 0x30 + (%y% * 0xc0)) 1
    PATCH_LOG ~%SOURCE_FILE% -- Container index #%y% -- has items & had trap value: %trapped% -- now has trap value: 1~
   END
  END
BUT_ONLY
END
END