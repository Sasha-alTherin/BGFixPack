//AREA-MinorCorrections.tph
PRINT ~Processing AREA-MinorCorrections.tph~
SILENT
//an actor tied to the cloakwood mines was present in the basement of a buildling in BG city. Changed to a prisoner instead.
COPY_EXISTING ar0111.are override //Flaming Fist Cellar
  READ_LONG 0x54 act_off //Actors offset
  READ_SHORT 0x58 act_cnt //Actors count
  FOR (i = 0; i < act_cnt; i += 1) BEGIN //Cycle through actors
        READ_ASCII (i * 0x110 + act_off + 0x80) tcre
        PATCH_IF (~%tcre%~ STRING_EQUAL_CASE ~slave4~ = 1) BEGIN //Slave
          WRITE_ASCII (i * 0x110 + act_off + 0x80) ~PRISON~ #8
        END
  END
BUT_ONLY

//change container type from bag to pile
ACTION_FOR_EACH abfile IN ~ar2012~ ~ar0513~ BEGIN
ACTION_IF (FILE_EXISTS_IN_GAME ~%abfile%.are~ ) THEN BEGIN
COPY_EXISTING ~%abfile%.are~ ~override~
 PATCH_IF (%SOURCE_SIZE% > 0xd4) BEGIN
  READ_LONG  0x70 "cont_off"
  READ_SHORT 0x74 "cont_num"
  FOR (index = 0; index < cont_num; index += 1) BEGIN
   READ_SHORT (%cont_off% + (%index% * 0xc0) + 0x24) cont_type
   PATCH_IF (%cont_type% = 1) BEGIN  //if it is bag
    WRITE_SHORT (%cont_off% + (%index% * 0xc0) + 0x24) 4 //change to pile
   END
  END
 END
BUT_ONLY
END
END

//actor positions
ACTION_DEFINE_ARRAY arefile BEGIN ar0145 ar0117 ar3303 ar0100  ar4810 ar3320 END
ACTION_DEFINE_ARRAY oldXoff BEGIN    595    559    619   2183     452    306 END
ACTION_DEFINE_ARRAY oldYoff BEGIN    511    270    512   1799     474    232 END
ACTION_DEFINE_ARRAY newXoff BEGIN    575    543    NA    NA       447    303 END
ACTION_DEFINE_ARRAY newYoff BEGIN    517    260    517   1800     NA     NA  END
OUTER_SET num_array = 6
OUTER_FOR (idx = 0; idx < %num_array%; idx += 1) BEGIN
 OUTER_SPRINT file $arefile("%idx%")
 OUTER_SET OXoff = $oldXoff("%idx%")
 OUTER_SET OYoff = $oldYoff("%idx%")
 ACTION_IF (IS_AN_INT $newXoff("%idx%") ) BEGIN
  OUTER_SET NXoff = $newXoff("%idx%")
 END ELSE BEGIN
  OUTER_SET NXoff = %OXoff%
 END
 ACTION_IF (IS_AN_INT $newYoff("%idx%") ) BEGIN
  OUTER_SET NYoff = $newYoff("%idx%")
 END ELSE BEGIN
  OUTER_SET NYoff = %OYoff%
 END
 ACTION_IF (FILE_EXISTS_IN_GAME ~%file%.are~) THEN BEGIN
  COPY_EXISTING ~%file%.are~ override
   READ_LONG 0x54 act_off
   READ_SHORT 0x58 act_cnt
   FOR (i = 0; i < %act_cnt%; i += 1) BEGIN
    READ_SHORT ((%i% * 0x110) + %act_off% + 0x20) xoff
    READ_SHORT ((%i% * 0x110) + %act_off% + 0x22) yoff
    PATCH_IF (xoff = OXoff ) AND (yoff = OYoff ) BEGIN //actor spawn point
     PATCH_IF (VARIABLE_IS_SET %NXoff%) AND (IS_AN_INT %NXoff%) BEGIN
      PATCH_LOG ~%file%.are -- replaced old X offset: %xoff% with new X offset: %NXoff%~
      WRITE_SHORT ((%i% * 0x110) + %act_off% + 0x20) NXoff
      WRITE_SHORT ((%i% * 0x110) + %act_off% + 0x24) NXoff
     END
     PATCH_IF (VARIABLE_IS_SET %NYoff%) AND (IS_AN_INT %NYoff%) BEGIN
      PATCH_LOG ~%file%.are -- replaced old Y offset: %yoff% with new Y offset: %NYoff%~
      WRITE_SHORT ((%i% * 0x110) + %act_off% + 0x22) NYoff
      WRITE_SHORT ((%i% * 0x110) + %act_off% + 0x26) NYoff
     END
    END
   END
  BUT_ONLY
 END
END

//container access points
ACTION_DEFINE_ARRAY arefile BEGIN ar3357 ar1503 ar1117 ar0153 ar4013 ar4011 ar4009 ar4007 ar4001 ar3901 ar4401 END
ACTION_DEFINE_ARRAY oldXoff BEGIN    541    274    404   1157    225    225    225    225    225   1108    370 END
ACTION_DEFINE_ARRAY oldYoff BEGIN    668    467    308    528    199    199    199    199    199   1425    183 END
ACTION_DEFINE_ARRAY newXoff BEGIN    544    238    415   1222    204    204    204    204    204   1139    334 END
ACTION_DEFINE_ARRAY newYoff BEGIN     NA    496    270    557     NA     NA     NA     NA     NA   1420     NA END
OUTER_SET num_array = 11
OUTER_FOR (idx = 0; idx < %num_array%; idx += 1) BEGIN
 OUTER_SPRINT file $arefile("%idx%")
 OUTER_SET OXoff = $oldXoff("%idx%")
 OUTER_SET OYoff = $oldYoff("%idx%")
 ACTION_IF (IS_AN_INT $newXoff("%idx%") ) BEGIN
  OUTER_SET NXoff = $newXoff("%idx%")
 END ELSE BEGIN
  OUTER_SET NXoff = %OXoff%
 END
 ACTION_IF (IS_AN_INT $newYoff("%idx%") ) BEGIN
  OUTER_SET NYoff = $newYoff("%idx%")
 END ELSE BEGIN
  OUTER_SET NYoff = %OYoff%
 END
 ACTION_IF (FILE_EXISTS_IN_GAME ~%file%.are~) THEN BEGIN
  COPY_EXISTING ~%file%.are~ override
   READ_LONG 0x70 con_off
   READ_SHORT 0x74 con_cnt
   FOR (i = 0; i < con_cnt; i += 1) BEGIN
    READ_SHORT (i * 0xc0 + con_off + 0x20) xoff
    READ_SHORT (i * 0xc0 + con_off + 0x22) yoff
    PATCH_IF (xoff = %OXoff%) AND (yoff = %OYoff%) BEGIN //container trap point
     PATCH_IF (VARIABLE_IS_SET %NXoff%) AND (IS_AN_INT %NXoff%) BEGIN
      PATCH_LOG ~%file%.are -- replaced old X offset: %xoff% with new X offset: %NXoff%~
      WRITE_SHORT (i * 0xc0 + con_off + 0x20) %NXoff%
     END
     PATCH_IF (VARIABLE_IS_SET %NYoff%) AND (IS_AN_INT %NYoff%) BEGIN
      PATCH_LOG ~%file%.are -- replaced old Y offset: %yoff% with new Y offset: %NYoff%~
      WRITE_SHORT (i * 0xc0 + con_off + 0x22) %NYoff%
     END
    END
   END
  BUT_ONLY
 END
END

ACTION_IF (GAME_IS ~totsc~) BEGIN
// ----------------------------------------------------------------------------
// AR0300 (renamed AR7400): Door 1 to the Counting House set as locked as described by Jacil
// door labeled Door0307 is locked in vanilla and not locked in totsc -- lock it to be consistent?
COPY_EXISTING ~ar0300.are~ ~override~
 READ_LONG 0x00a4 ~doornum~
 READ_LONG 0x00a8 ~dooroff~
 FOR(x=0;x<%doornum%;x+=1)BEGIN
  READ_ASCII (%dooroff% + (200*%x%)) ~doorname~
//  PATCH_PRINT ~Door#: %doornum%  -- has name: %doorname%~
  PATCH_IF (~Door0307~ STRING_EQUAL_CASE ~%doorname%~) BEGIN
   READ_LONG (%dooroff% + (200*%x%)+0x0028) ~flags~
   WRITE_LONG (%dooroff% + (200*%x%)+0x0028) (%flags% BOR 0b0000000000010)
   SET x=%doornum%
  END
 END
BUT_ONLY_IF_IT_CHANGES
// ----------------------------------------------------------------------------
//AR0511 (renamed ARD011): Trap 4 added flag �Detectable trap�; Trap 15 corrected to Proximity trigger, was Info trigger;
//Corrected undroppable Lard Shield (SHLD18) to a droppable one (SHLD15)
//dudley -- Change Item 3 in Container 8 from HELM13.ITM to HELM10.ITM.
COPY_EXISTING ~ar0511.are~ ~override~
 READ_SHORT 0x005a ~regionnum~
 READ_LONG 0x005c ~regionoff~
 FOR(x1=0;x1<%regionnum%;x1+=1)BEGIN
  READ_ASCII (%regionoff% + (0xc4*%x1%)) ~regionname~ (5)
  PATCH_IF (~Trap4~ STRING_EQUAL_CASE ~%regionname%~) BEGIN
   READ_LONG (%regionoff% + (0xc4*%x1%)+0x0060) ~flags~
   WRITE_LONG (%regionoff% + (0xc4*%x1%)+0x0060) (%flags% BOR 0b1000)
   SET x1=%regionnum%
  END
 END
 FOR(x2=0;x2<%regionnum%;x2+=1)BEGIN
  READ_ASCII (%regionoff% + (0xc4*%x2%)) ~regionname~ (7)
  PATCH_IF (~Trap 15~ STRING_EQUAL_CASE ~%regionname%~) BEGIN
   WRITE_SHORT (%regionoff% + (0xc4*%x2%)+0x0020) 0
   SET x2=%regionnum%
  END
 END
 READ_SHORT 0x0076 ~itemnum~
 READ_LONG 0x0078 ~itemoff~
 FOR(x3=0;x3<%itemnum%;x3+=1)BEGIN
  READ_ASCII (%itemoff% + (%x3%*0x14)) ~itemname~
  PATCH_IF (~shld18~ STRING_EQUAL_CASE ~%itemname%~) BEGIN
   WRITE_ASCII (%itemoff% + (%x3%*0x14)) ~shld15~ (8)
   SET x3=%itemnum%
  END
 END
 FOR(x4=0;x4<%itemnum%;x4+=1)BEGIN
  READ_ASCII (%itemoff% + (%x4%*0x14)) ~itemname~
  PATCH_IF (~helm13~ STRING_EQUAL_CASE ~%itemname%~) BEGIN
   WRITE_ASCII (%itemoff% + (%x4%*0x14)) ~helm10~ (8)
   SET x4=%itemnum%
  END
 END
BUT_ONLY_IF_IT_CHANGES

END